* Введение:
  * Основные понятия
  * Зачем это нужно
  * Функциональное программирование и "Javascript"


1 Основные понятия и определения
---------------------------------

Функциональное программирование(ф.п.) - парадигма программирования.

парадигма программирования - (парадигма от греч. παράδειγμα, пример, модель, образец) это система идей и понятий, определяющих стиль написания компьютерных программ,
а также образ мышления программиста.

Парадигма не определяется однозначно языком программирования; практически все языки программирования допускают использование той или иной парадигмы.

Приверженность определенного человека какой-то одной парадигме может носить настолько сильный характер, что споры о преимуществах и недостатках различных парадигм
относятся к разряду так называемых "религиозных" войн - "холиваров".

Ф.п. противопоставляется парадигме императивного программирования(и.п.), которая описывает процесс вычислений как последовательное изменение состояний.

Ф.п. предполагает обходится вычислением результатов функций от исходных данных и результатов других функций, и не предполагает явного хранения состояния программы. Соответственно, не предполагает оно
и изменяемость этого состояния (в отличие от императивного, где одной из базовых концепций является переменная, хранящая своё значение и позволяющая менять его по мере выполнения алгоритма).
<source>Википедия</source>

2 Зачем это нужно
---------------------------------
Отличие математической функции от понятия функции в и.п. заключается в том, что императивные функции могут опираться не только на аргументы, но и на состояние внешних по отношению к функции переменных,
а также иметь побочные эффекты и менять состояние внешних переменных. Таким образом, в и.п. при вызове одной и той же функции с одинаковыми параметрами, но на разных этапах выполнения алгоритма, можно
получить разные данные на выходе из-за влияния на функции состояния переменных. А в функциональном языке при вызове функции с одними и теми же аргументами мы всегда получим одинаковый результат: выходные
данные зависят только от входных. Это позволяет средам выполнения программ на функциональных языках сохранять(кэшировать) результат функций и вызывать их в порядке, не определяемом алгоритмом.

3 Функциональное программирование и "Javascript"
------------------------------------------------
В javascript-е одним из основных объектов является функция, которая позволяет нам использовать блоки кода повторно. Поэтому ничего не мешает нам использовать ф.п. в javascript-е, и даже
приветствуется такой подход, так как сопутствует понижению побочных эффектов производимых функциями.
